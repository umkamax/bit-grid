plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

java {
	def compatibilityVersion = 17
	sourceCompatibility = compatibilityVersion
	targetCompatibility = compatibilityVersion
}

compileJava {
	options.compilerArgs += [
			'-Amapstruct.defaultComponentModel=spring'
	]
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	runtimeOnly 'org.postgresql:postgresql'

	compileOnly 'org.projectlombok:lombok'
	compileOnly 'org.mapstruct:mapstruct:1.5.5.Final'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.flywaydb:flyway-core'

}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.named('test') {
	useJUnitPlatform()
}
